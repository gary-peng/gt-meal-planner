[{"C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\index.js":"1","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\App.js":"2","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\Menu.js":"3","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\MenuItem.js":"4","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\Restrictions.js":"5","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\context\\GlobalContext.js":"6","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\DinningHalls.js":"7"},{"size":207,"mtime":1609835801638,"results":"8","hashOfConfig":"9"},{"size":1146,"mtime":1610072549303,"results":"10","hashOfConfig":"9"},{"size":1616,"mtime":1610084674919,"results":"11","hashOfConfig":"9"},{"size":1121,"mtime":1610086253573,"results":"12","hashOfConfig":"9"},{"size":1536,"mtime":1610082126620,"results":"13","hashOfConfig":"9"},{"size":188,"mtime":1610061058822,"results":"14","hashOfConfig":"9"},{"size":848,"mtime":1610095759457,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8ejt0m",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\index.js",[],["34","35"],"C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\App.js",[],"C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\Menu.js",["36","37","38","39","40"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport MenuItem from './MenuItem';\r\nimport { RestrictContext, DinnHallContext, CalorieContext } from '../context/GlobalContext'\r\n\r\nfunction Menu() {\r\n    const { restrict, setRestrict } = useContext(RestrictContext);\r\n    const { dinnHall, setDinnHall } = useContext(DinnHallContext);\r\n    const { calorie, setCalorie } = useContext(CalorieContext);\r\n\r\n    const [menu, setMenu] = useState([]);\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch('/api/menu/' + dinnHall)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setIsLoaded(true);\r\n                setMenu(result);\r\n            },\r\n            (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        );\r\n        setCalorie(0);\r\n    }, [dinnHall]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='mt-5'>\r\n            <h5>Menu</h5>\r\n            { menu.map((item) => {\r\n                var found = false;\r\n                restrict.forEach((val) => {\r\n                    if (item.restrictions.includes(val)) {\r\n                        found = true;\r\n                    }\r\n                });\r\n\r\n                if (!found) {\r\n                    return <MenuItem item={item} />;\r\n                }\r\n            }) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\MenuItem.js",["41","42"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { CalorieContext } from '../context/GlobalContext';\r\n\r\nfunction MenuItem({ item }) {\r\n    const { calorie, setCalorie } = useContext(CalorieContext);\r\n\r\n    const [serv, setServ] = useState(0);\r\n\r\n    const inc = () => {\r\n        setServ((prev) => prev + 1);\r\n        setCalorie((prev) => prev + item.calorie);\r\n    };\r\n\r\n    const dec = () => {\r\n        if (serv != 0) {\r\n            setServ((prev) => prev - 1);\r\n            setCalorie((prev) => prev - item.calorie);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (calorie == 0) {\r\n            setServ(0);\r\n        }\r\n    }, [calorie]);\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                { item.name } ({ item.calorie } calories)         \r\n                <Button className='ml-2 mr-2 shadow-none white-btn' onClick={dec}>-</Button>\r\n                { serv }\r\n                <Button className='ml-2 mr-2 shadow-none white-btn' onClick={inc}>+</Button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuItem;\r\n","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\Restrictions.js",["43","44","45"],"import React, { useState, useContext } from 'react';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\nimport { RestrictContext } from \"../context/GlobalContext\";\r\n\r\nfunction Restrictions() {\r\n    const { restrict, setRestrict } = useContext(RestrictContext);\r\n\r\n    const handleChange = (val) => setRestrict(val);\r\n\r\n    const restrictions = ['eggs', 'fish', 'milk', 'peanuts', 'shellfish', 'soy', 'treenuts', 'wheat', 'gluten', 'halal', 'kosher', 'locallygrown', 'organic', 'vegan', 'vegetarian'];\r\n\r\n    return (\r\n        <div className='mb-3'>\r\n            <ToggleButtonGroup className='flex-wrap' type='checkbox' value={restrict} onChange={handleChange}>\r\n                { restrictions.map((restriction, i) => {\r\n                    if (i <= 8) {\r\n                        return <ToggleButton className='rounded-0 shadow-none white-btn' value={restriction}>{ restriction }</ToggleButton>;\r\n                    }\r\n                }) }\r\n            </ToggleButtonGroup>\r\n            <ToggleButtonGroup className='flex-wrap' type='checkbox' value={restrict} onChange={handleChange}>\r\n                { restrictions.map((restriction, i) => {\r\n                    if (i > 8) {\r\n                        return <ToggleButton className='rounded-0 shadow-none white-btn' value={restriction}>{ restriction }</ToggleButton>;\r\n                    }\r\n                }) }\r\n            </ToggleButtonGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restrictions;\r\n","C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\context\\GlobalContext.js",[],"C:\\Users\\garyl\\Desktop\\Repo\\gt-meal-planner\\client\\src\\components\\DinningHalls.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":6,"column":23,"nodeType":"52","messageId":"53","endLine":6,"endColumn":34},{"ruleId":"50","severity":1,"message":"54","line":7,"column":23,"nodeType":"52","messageId":"53","endLine":7,"endColumn":34},{"ruleId":"50","severity":1,"message":"55","line":8,"column":13,"nodeType":"52","messageId":"53","endLine":8,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":29,"column":8,"nodeType":"58","endLine":29,"endColumn":18,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":40,"column":31,"nodeType":"62","messageId":"63","endLine":40,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":16,"column":18,"nodeType":"66","messageId":"67","endLine":16,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":23,"column":21,"nodeType":"66","messageId":"67","endLine":23,"endColumn":23},{"ruleId":"50","severity":1,"message":"69","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":16,"column":53,"nodeType":"62","messageId":"63","endLine":16,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":23,"column":53,"nodeType":"62","messageId":"63","endLine":23,"endColumn":55},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'setRestrict' is assigned a value but never used.","Identifier","unusedVar","'setDinnHall' is assigned a value but never used.","'calorie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCalorie'. Either include it or remove the dependency array.","ArrayExpression",["72"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [dinnHall, setCalorie]",{"range":"75","text":"76"},[946,956],"[dinnHall, setCalorie]"]